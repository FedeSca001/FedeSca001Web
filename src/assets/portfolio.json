[
        {
                "title": "Scraping Bot",
                "subTitle": "Mi primer API",
                "img":"scraping-bot-img",
                "description": "Este bot es un servidor web creado con Express y Node.js que utiliza la biblioteca Cheerio para realizar scraping en varias páginas web y extraer datos específicos. El bot obtiene cotizaciones del dólar en Argentina, el tipo de cambio euro-dólar y los precios del oro en quilates de 24 y 18. Luego, devuelve los datos recopilados en formato JSON como respuesta a las solicitudes realizadas a través de la ruta principal del servidor.",
                "link": "https://github.com/FedeSca001/Scraping-dolar",
                "deploy": "https://api-precio-dolar.onrender.com"
        },
        {
                "title": "Food-App",
                "subTitle": "E-commerce Vue 3",
                "img":"food-app-img",
                "description": "El proyecto en la página web https://foods-app-vue3.web.app/ utiliza Vue 3 con Vite como herramienta de construcción, Pinia como estado de gestión, Vuetify como biblioteca de componentes de interfaz de usuario y Axios para realizar llamadas a una API. La aplicación está diseñada para mostrar información relacionada con alimentos y permite interactuar con la API para obtener y mostrar datos actualizados..",
                "link": "https://github.com/FedeSca001/foods-app",
                "deploy": "https://foods-app-vue3.web.app/"
        },
        {
                "title": "ToDo App",
                "subTitle": "Mi primer servidor",
                "img":"to-do-app",
                "description": "El proyecto en la página web https://to-do-list-full-stack.netlify.app/ se centra en el funcionamiento y la comunicación entre el frontend y el backend. Es un servidor creado y alojado por el usuario, y utiliza Node.js con Express y Nodemon en el backend para manejar las solicitudes y respuestas. En el frontend, se utiliza Vue.js junto con Pinia y Axios para crear una lista de tareas. La aplicación permite al usuario agregar y eliminar tareas, y la comunicación entre el frontend y el backend se realiza mediante solicitudes HTTP.",
                "link": "https://github.com/FedeSca001/ToDo-list-Mevn-stack",
                "deploy": "https://to-do-list-full-stack.netlify.app"
        },
        {
                "title": "Parking Sites",
                "subTitle": "Conecto el back-end con el front-end.",
                "img":"parking-app-img",
                "description": "En éste proyecto lo verdaderamente importante es prestar atención al funcionamiento y la comunicación entre el front y el back. Es mi primer servidor creado y hosteado.",
                "link": "https://github.com/FedeSca001/parking-MEVN-front",
                "deploy": "https://parking-sites.netlify.app/"
        },
        {
                "title": "Calculator",
                "subTitle": "Vuex Practice",
                "img":"calculator-app",
                "description": "Éste proyecto fue una práctica de los 'estados' de vuex. Todas los datos se almacenan en las variables globales y son mostrados en todos los componentes.",
                "link": "https://github.com/FedeSca001/Calculator-Functions",
                "deploy": "https://function-aplication.netlify.app"
        },
        {
                "title": "Fantasia Js",
                "subTitle": "E-commerce vanilla Js",
                "img":"fantasi-kiosco",
                "description": "Es un proyecto de un kiosco ficticio donde un cliente ingresa sus datos y encarga mercadería del kiosco. Utiliza jquery y ajax.",
                "link": "https://github.com/FedeSca001/Proyecto-final-Coder",
                "deploy": "https://kiosco-fantacia.netlify.app"
        }
]